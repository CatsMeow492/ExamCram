{
  "Questions": [
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #26"
          },
          "question": {
            "S": "A Machine Learning Specialist kicks off a hyperparameter tuning job for a tree-based ensemble model using Amazon SageMaker with Area Under the ROC Curve (AUC) as the objective metric. This workflow will eventually be deployed in a pipeline that retrains and tunes hyperparameters each night to model click-through on data that goes stale every 24 hours.\nWith the goal of decreasing the amount of time it takes to train these models, and ultimately to decrease costs, the Specialist wants to reconfigure the input hyperparameter range(s).\nWhich visualization will accomplish this?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "A histogram showing whether the most important input feature is Gaussian."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "A scatter plot with points colored by target variable that uses t-Distributed Stochastic Neighbor Embedding (t-SNE) to visualize the large number of input variables in an easier-to-read dimension."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "A scatter plot showing the performance of the objective metric over each training iteration."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "A scatter plot showing the correlation between maximum tree depth and the objective metric."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #27"
          },
          "question": {
            "S": "A Machine Learning Specialist is creating a new natural language processing application that processes a dataset comprised of 1 million sentences. The aim is to then run Word2Vec to generate embeddings of the sentences and enable different types of predictions.\nHere is an example from the dataset:\n\"The quck BROWN FOX jumps over the lazy dog.\"\nWhich of the following are the operations the Specialist needs to perform to correctly sanitize and prepare the data in a repeatable manner? (Choose three.)"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Perform part-of-speech tagging and keep the action verb and the nouns only."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Normalize all words by making the sentence lowercase."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Remove stop words using an English stopword dictionary."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Correct the typography on \"quck\" to \"quick.\""
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "One-hot encode all words in the sentence."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Tokenize the sentence into words."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #28"
          },
          "question": {
            "S": "A company is using Amazon Polly to translate plaintext documents to speech for automated company announcements. However, company acronyms are being mispronounced in the current documents.\nHow should a Machine Learning Specialist address this issue for future documents?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Convert current documents to SSML with pronunciation tags."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Create an appropriate pronunciation lexicon."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Output speech marks to guide in pronunciation."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use Amazon Lex to preprocess the text files for pronunciation."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #29"
          },
          "question": {
            "S": "An insurance company is developing a new device for vehicles that uses a camera to observe drivers' behavior and alert them when they appear distracted. The company created approximately 10,000 training images in a controlled environment that a Machine Learning Specialist will use to train and evaluate machine learning models.\nDuring the model evaluation, the Specialist notices that the training error rate diminishes faster as the number of epochs increases and the model is not accurately inferring on the unseen test images.\nWhich of the following should be used to resolve this issue? (Choose two.)"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Add vanishing gradient to the model."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Perform data augmentation on the training data."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Make the neural network architecture complex."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use gradient checking in the model."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Add L2 regularization to the model."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #30"
          },
          "question": {
            "S": "When submitting Amazon SageMaker training jobs using one of the built-in algorithms, which common parameters MUST be specified? (Choose three.)"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "The training channel identifying the location of training data on an Amazon S3 bucket."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The validation channel identifying the location of validation data on an Amazon S3 bucket."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The IAM role that Amazon SageMaker can assume to perform tasks on behalf of the users."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Hyperparameters in a JSON array as documented for the algorithm used."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The Amazon EC2 instance class specifying whether training will be run using CPU or GPU."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The output path specifying where on an Amazon S3 bucket the trained model will persist."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #31"
          },
          "question": {
            "S": "A monitoring service generates 1 TB of scale metrics record data every minute. A Research team performs queries on this data using Amazon Athena. The queries run slowly due to the large volume of data, and the team requires better performance.\nHow should the records be stored in Amazon S3 to improve query performance?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "CSV files"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Parquet files"
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Compressed JSON"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "RecordIO"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #32"
          },
          "question": {
            "S": "Machine Learning Specialist is working with a media company to perform classification on popular articles from the company's website. The company is using random forests to classify how popular an article will be before it is published. A sample of the data being used is below.\n\nGiven the dataset, the Specialist wants to convert the Day_Of_Week column to binary values.\nWhat technique should be used to convert this column to binary values?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Binarization"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "One-hot encoding"
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Tokenization"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Normalization transformation"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #33"
          },
          "question": {
            "S": "A gaming company has launched an online game where people can start playing for free, but they need to pay if they choose to use certain features. The company needs to build an automated system to predict whether or not a new user will become a paid user within 1 year. The company has gathered a labeled dataset from 1 million users.\nThe training dataset consists of 1,000 positive samples (from users who ended up paying within 1 year) and 999,000 negative samples (from users who did not use any paid features). Each data sample consists of 200 features including user age, device, location, and play patterns.\nUsing this dataset for training, the Data Science team trained a random forest model that converged with over 99% accuracy on the training set. However, the prediction results on a test dataset were not satisfactory\nWhich of the following approaches should the Data Science team take to mitigate this issue? (Choose two.)"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Add more deep trees to the random forest to enable the model to learn more features."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Include a copy of the samples in the test dataset in the training dataset."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Generate more positive samples by duplicating the positive samples and adding a small amount of noise to the duplicated data."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Change the cost function so that false negatives have a higher impact on the cost value than false positives."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Change the cost function so that false positives have a higher impact on the cost value than false negatives."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #34"
          },
          "question": {
            "S": "A Data Scientist is developing a machine learning model to predict future patient outcomes based on information collected about each patient and their treatment plans. The model should output a continuous value as its prediction. The data available includes labeled outcomes for a set of 4,000 patients. The study was conducted on a group of individuals over the age of 65 who have a particular disease that is known to worsen with age.\nInitial models have performed poorly. While reviewing the underlying data, the Data Scientist notices that, out of 4,000 patient observations, there are 450 where the patient age has been input as 0. The other features for these observations appear normal compared to the rest of the sample population\nHow should the Data Scientist correct this issue?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Drop all records from the dataset where age has been set to 0."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Replace the age field value for records with a value of 0 with the mean or median value from the dataset."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Drop the age feature from the dataset and train the model using the rest of the features."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use k-means clustering to handle missing features."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #35"
          },
          "question": {
            "S": "A Data Science team is designing a dataset repository where it will store a large amount of training data commonly used in its machine learning models. As Data Scientists may create an arbitrary number of new datasets every day, the solution has to scale automatically and be cost-effective. Also, it must be possible to explore the data using SQL.\nWhich storage scheme is MOST adapted to this scenario?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Store datasets as files in Amazon S3."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Store datasets as files in an Amazon EBS volume attached to an Amazon EC2 instance."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Store datasets as tables in a multi-node Amazon Redshift cluster."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Store datasets as global tables in Amazon DynamoDB."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #36"
          },
          "question": {
            "S": "A Machine Learning Specialist deployed a model that provides product recommendations on a company's website. Initially, the model was performing very well and resulted in customers buying more products on average. However, within the past few months, the Specialist has noticed that the effect of product recommendations has diminished and customers are starting to return to their original habits of spending less. The Specialist is unsure of what happened, as the model has not changed from its initial deployment over a year ago.\nWhich method should the Specialist try to improve model performance?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "The model needs to be completely re-engineered because it is unable to handle product inventory changes."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The model's hyperparameters should be periodically updated to prevent drift."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The model should be periodically retrained from scratch using the original data while adding a regularization term to handle product inventory changes."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The model should be periodically retrained using the original training data plus new data as product inventory changes."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #37"
          },
          "question": {
            "S": "A Machine Learning Specialist working for an online fashion company wants to build a data ingestion solution for the company's Amazon S3-based data lake.\nThe Specialist wants to create a set of ingestion mechanisms that will enable future capabilities comprised of:\n\u2711 Real-time analytics\n\u2711 Interactive analytics of historical data\n\u2711 Clickstream analytics\n\u2711 Product recommendations\nWhich services should the Specialist use?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "AWS Glue as the data catalog; Amazon Kinesis Data Streams and Amazon Kinesis Data Analytics for real-time data insights; Amazon Kinesis Data Firehose for delivery to Amazon ES for clickstream analytics; Amazon EMR to generate personalized product recommendations."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Amazon Athena as the data catalog: Amazon Kinesis Data Streams and Amazon Kinesis Data Analytics for near-real-time data insights; Amazon Kinesis Data Firehose for clickstream analytics; AWS Glue to generate personalized product recommendations."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "AWS Glue as the data catalog; Amazon Kinesis Data Streams and Amazon Kinesis Data Analytics for historical data insights; Amazon Kinesis Data Firehose for delivery to Amazon ES for clickstream analytics; Amazon EMR to generate personalized product recommendations."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Amazon Athena as the data catalog; Amazon Kinesis Data Streams and Amazon Kinesis Data Analytics for historical data insights; Amazon DynamoDB streams for clickstream analytics; AWS Glue to generate personalized product recommendations."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #38"
          },
          "question": {
            "S": "A company is observing low accuracy while training on the default built-in image classification algorithm in Amazon SageMaker. The Data Science team wants to use an Inception neural network architecture instead of a ResNet architecture.\nWhich of the following will accomplish this? (Choose two.)"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Customize the built-in image classification algorithm to use Inception and use this for model training."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Create a support case with the SageMaker team to change the default image classification algorithm to Inception."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Bundle a Docker container with TensorFlow Estimator loaded with an Inception network and use this for model training."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use custom code in Amazon SageMaker with TensorFlow Estimator to load the model with an Inception network, and use this for model training."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Download and apt-get install the inception network code into an Amazon EC2 instance and use this instance as a Jupyter notebook in Amazon SageMaker."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #39"
          },
          "question": {
            "S": "A Machine Learning Specialist built an image classification deep learning model. However, the Specialist ran into an overfitting problem in which the training and testing accuracies were 99% and 75%, respectively.\nHow should the Specialist address this issue and what is the reason behind it?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "The learning rate should be increased because the optimization process was trapped at a local minimum."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The dropout rate at the flatten layer should be increased because the model is not generalized enough."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The dimensionality of dense layer next to the flatten layer should be increased because the model is not complex enough."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "The epoch number should be increased because the optimization process was terminated before it reached the global minimum."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #40"
          },
          "question": {
            "S": "A Machine Learning team uses Amazon SageMaker to train an Apache MXNet handwritten digit classifier model using a research dataset. The team wants to receive a notification when the model is overfitting. Auditors want to view the Amazon SageMaker log activity report to ensure there are no unauthorized API calls.\nWhat should the Machine Learning team do to address the requirements with the least amount of code and fewest steps?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Implement an AWS Lambda function to log Amazon SageMaker API calls to Amazon S3. Add code to push a custom metric to Amazon CloudWatch. Create an alarm in CloudWatch with Amazon SNS to receive a notification when the model is overfitting."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use AWS CloudTrail to log Amazon SageMaker API calls to Amazon S3. Add code to push a custom metric to Amazon CloudWatch. Create an alarm in CloudWatch with Amazon SNS to receive a notification when the model is overfitting."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Implement an AWS Lambda function to log Amazon SageMaker API calls to AWS CloudTrail. Add code to push a custom metric to Amazon CloudWatch. Create an alarm in CloudWatch with Amazon SNS to receive a notification when the model is overfitting."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use AWS CloudTrail to log Amazon SageMaker API calls to Amazon S3. Set up Amazon SNS to receive a notification when the model is overfitting."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #41"
          },
          "question": {
            "S": "A Machine Learning Specialist is building a prediction model for a large number of features using linear models, such as linear regression and logistic regression. During exploratory data analysis, the Specialist observes that many features are highly correlated with each other. This may make the model unstable. What should be done to reduce the impact of having such a large number of features?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Perform one-hot encoding on highly correlated features."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use matrix multiplication on highly correlated features."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Create a new feature space using principal component analysis (PCA)"
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Apply the Pearson correlation coefficient."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #42"
          },
          "question": {
            "S": "A Machine Learning Specialist is implementing a full Bayesian network on a dataset that describes public transit in New York City. One of the random variables is discrete, and represents the number of minutes New Yorkers wait for a bus given that the buses cycle every 10 minutes, with a mean of 3 minutes. Which prior probability distribution should the ML Specialist use for this variable?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Poisson distribution"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Uniform distribution"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Normal distribution"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Binomial distribution"
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #43"
          },
          "question": {
            "S": "A Data Science team within a large company uses Amazon SageMaker notebooks to access data stored in Amazon S3 buckets. The IT Security team is concerned that internet-enabled notebook instances create a security vulnerability where malicious code running on the instances could compromise data privacy. The company mandates that all instances stay within a secured VPC with no internet access, and data communication traffic must stay within the AWS network. How should the Data Science team configure the notebook instance placement to meet these requirements?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Associate the Amazon SageMaker notebook with a private subnet in a VPC. Place the Amazon SageMaker endpoint and S3 buckets within the same VPC."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Associate the Amazon SageMaker notebook with a private subnet in a VPC. Use IAM policies to grant access to Amazon S3 and Amazon SageMaker."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Associate the Amazon SageMaker notebook with a private subnet in a VPC. Ensure the VPC has S3 VPC endpoints and Amazon SageMaker VPC endpoints attached to it."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Associate the Amazon SageMaker notebook with a private subnet in a VPC. Ensure the VPC has a NAT gateway and an associated security group allowing only outbound connections to Amazon S3 and Amazon SageMaker."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #44"
          },
          "question": {
            "S": "A Machine Learning Specialist has created a deep learning neural network model that performs well on the training data but performs poorly on the test data. Which of the following methods should the Specialist consider using to correct this? (Choose three.)"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Decrease regularization."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Increase regularization."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Increase dropout."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Decrease dropout."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Increase feature combinations."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Decrease feature combinations."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #45"
          },
          "question": {
            "S": "A Data Scientist needs to create a serverless ingestion and analytics solution for high-velocity, real-time streaming data. The ingestion process must buffer and convert incoming records from JSON to a query-optimized, columnar format without data loss. The output datastore must be highly available, and Analysts must be able to run SQL queries against the data and connect to existing business intelligence dashboards. Which solution should the Data Scientist build to satisfy the requirements?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Create a schema in the AWS Glue Data Catalog of the incoming data format. Use an Amazon Kinesis Data Firehose delivery stream to stream the data and transform the data to Apache Parquet or ORC format using the AWS Glue Data Catalog before delivering to Amazon S3. Have the Analysts query the data directly from Amazon S3 using Amazon Athena, and connect to BI tools using the Athena Java Database Connectivity (JDBC) connector."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Write each JSON record to a staging location in Amazon S3. Use the S3 Put event to trigger an AWS Lambda function that transforms the data into Apache Parquet or ORC format and writes the data to a processed data location in Amazon S3. Have the Analysts query the data directly from Amazon S3 using Amazon Athena, and connect to BI tools using the Athena Java Database Connectivity (JDBC) connector."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Write each JSON record to a staging location in Amazon S3. Use the S3 Put event to trigger an AWS Lambda function that transforms the data into Apache Parquet or ORC format and inserts it into an Amazon RDS PostgreSQL database. Have the Analysts query and run dashboards from the RDS database."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use Amazon Kinesis Data Analytics to ingest the streaming data and perform real-time SQL queries to convert the records to Apache Parquet before delivering to Amazon S3. Have the Analysts query the data directly from Amazon S3 using Amazon Athena and connect to BI tools using the Athena Java Database Connectivity (JDBC) connector."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #46"
          },
          "question": {
            "S": "An online reseller has a large, multi-column dataset with one column missing 30% of its data. A Machine Learning Specialist believes that certain columns in the dataset could be used to reconstruct the missing data. Which reconstruction approach should the Specialist use to preserve the integrity of the dataset?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Listwise deletion"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Last observation carried forward"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Multiple imputation"
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Mean substitution"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #47"
          },
          "question": {
            "S": "A company is setting up an Amazon SageMaker environment. The corporate data security policy does not allow communication over the internet. How can the company enable the Amazon SageMaker service without enabling direct internet access to Amazon SageMaker notebook instances?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Create a NAT gateway within the corporate VPC."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Route Amazon SageMaker traffic through an on-premises network."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Create Amazon SageMaker VPC interface endpoints within the corporate VPC."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Create VPC peering with Amazon VPC hosting Amazon SageMaker."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #48"
          },
          "question": {
            "S": "A Machine Learning Specialist is training a model to identify the make and model of vehicles in images. The Specialist wants to use transfer learning and an existing model trained on images of general objects. The Specialist collated a large custom dataset of pictures containing different vehicle makes and models. What should the Specialist do to initialize the model to re-train it with the custom data?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Initialize the model with random weights in all layers including the last fully connected layer."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Initialize the model with pre-trained weights in all layers and replace the last fully connected layer."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Initialize the model with random weights in all layers and replace the last fully connected layer."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Initialize the model with pre-trained weights in all layers including the last fully connected layer."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #49"
          },
          "question": {
            "S": "An office security agency conducted a successful pilot using 100 cameras installed at key locations within the main office. Images from the cameras were uploaded to Amazon S3 and tagged using Amazon Rekognition, and the results were stored in Amazon ES. The agency is now looking to expand the pilot into a full production system using thousands of video cameras in its office locations globally. The goal is to identify activities performed by non-employees in real time. Which solution should the agency consider?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Use a proxy server at each local office and for each camera, and stream the RTSP feed to a unique Amazon Kinesis Video Streams video stream. On each stream, use Amazon Rekognition Video and create a stream processor to detect faces from a collection of known employees, and alert when non-employees are detected."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use a proxy server at each local office and for each camera, and stream the RTSP feed to a unique Amazon Kinesis Video Streams video stream. On each stream, use Amazon Rekognition Image to detect faces from a collection of known employees and alert when non-employees are detected."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Install AWS DeepLens cameras and use the DeepLens_Kinesis_Video module to stream video to Amazon Kinesis Video Streams for each camera. On each stream, use Amazon Rekognition Video and create a stream processor to detect faces from a collection on each stream, and alert when non-employees are detected."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Install AWS DeepLens cameras and use the DeepLens_Kinesis_Video module to stream video to Amazon Kinesis Video Streams for each camera. On each stream, run an AWS Lambda function to capture image fragments and then call Amazon Rekognition Image to detect faces from a collection of known employees, and alert when non-employees are detected."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "PutRequest": {
        "Item": {
          "QuestionID": {
            "S": "Question #50"
          },
          "question": {
            "S": "A Marketing Manager at a pet insurance company plans to launch a targeted marketing campaign on social media to acquire new customers. Currently, the company has the following data in Amazon Aurora: Profiles for all past and existing customers, Profiles for all past and existing insured pets, Policy-level information, Premiums received, Claims paid. What steps should be taken to implement a machine learning model to identify potential new customers on social media?"
          },
          "options": {
            "L": [
              {
                "M": {
                  "text": {
                    "S": "Use regression on customer profile data to understand key characteristics of consumer segments. Find similar profiles on social media"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use clustering on customer profile data to understand key characteristics of consumer segments. Find similar profiles on social media"
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use a recommendation engine on customer profile data to understand key characteristics of consumer segments. Find similar profiles on social media."
                  },
                  "correct": {
                    "BOOL": true
                  }
                }
              },
              {
                "M": {
                  "text": {
                    "S": "Use a decision tree classifier engine on customer profile data to understand key characteristics of consumer segments. Find similar profiles on social media."
                  },
                  "correct": {
                    "BOOL": false
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}